#!/bin/bash
set -x

# data source name corresponding to builds to revert. "gisaid" or "open".
data_source_name=$1

# An individual regional dataset to revert. Options are "global", "africa", "asia", "europe", "north-america", "oceania", "south-america". If not specified, reverts all.
# If you'd like to revert multiple regions but not all, run the script multiple times, specifying one region each time.
build_region_name=$2

# date to revert to e.g. yesterday in "+%Y-%m-%d" format.
date=$3

if [[ "$build_region_name" == "all" ]]
then
    regions=" \
    global \
    africa \
    asia \
    europe \
    north-america \
    oceania \
    south-america \
    "
else
    regions=$build_region_name
fi

missing_count=0
for region in $regions; do
    if nextstrain remote list s3://nextstrain-data/ncov_${data_source_name}_${region}_${date}.json; then
        # revert main json
        nextstrain remote download "s3://nextstrain-data/ncov_${data_source_name}_${region}_${date}.json" .
        mv "ncov_${data_source_name}_${region}_${date}.json" "ncov_${data_source_name}_${region}.json"
        nextstrain remote upload "s3://nextstrain-data" "s3://nextstrain-data/ncov_${data_source_name}_${region}.json"
        # revert tip frequencies json
        nextstrain remote download "s3://nextstrain-data/ncov_${data_source_name}_${region}_${date}_tip-frequencies.json" .
        mv "ncov_${data_source_name}_${region}_${date}_tip-frequencies.json" "ncov_${data_source_name}_${region}_tip-frequencies.json"
        nextstrain remote upload "s3://nextstrain-data" "ncov_${data_source_name}_${region}_tip-frequencies.json"
    else
        ((missing_count++))
    fi
done

if [[ "$missing_count" -gt 0 ]]; then
    echo "At least one requested dataset doesn't exist and thus we can't revert to it!"
fi

exit $missing_count
